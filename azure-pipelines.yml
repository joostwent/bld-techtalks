# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
- group: Secrets
- name: dockerRegistryServiceConnection
  value: '2d871628-9898-4d57-be60-1df8260b1245'
- name: imageRepository
  value: 'sampleticks'
- name: containerRegistry
  value: 'acrakstalkbld2202.azurecr.io'
- name: dockerfilePath
  value: '**/Dockerfile'
- name: tag
  value: '$(Build.BuildId)'
- name: imagePullSecret
  value: 'acrakstalkbld220243c6-auth'
- name: vmImageName
  value: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'joostwentbldtechtalks.secrets'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          - task: FileTransform@1
            inputs:
              folderPath: '$(Pipeline.Workspace)/manifests'
              fileType: 'json'
              targetFiles: '*.yml'
          - task: replacetokens@5
            inputs:
              rootDirectory: '$(Pipeline.Workspace)/manifests'
              targetFiles: '**/*.yml'
              encoding: 'auto'
              tokenPattern: 'custom'
              tokenPrefix: '#{'
              tokenSuffix: '}#'
              writeBOM: true
              verbosity: 'detailed'
              actionOnMissing: 'fail'
              keepToken: false
              actionOnNoFiles: 'fail'
              enableTransforms: false
              useLegacyPattern: false
              enableTelemetry: true
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

